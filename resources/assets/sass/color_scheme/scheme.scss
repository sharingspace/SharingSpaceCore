$inverseAccentColor: invert($accentColor);
$primaryText: rgba(#000, 0.87);
$secondaryText: rgba(#000, 0.54);
$dividerColor: rgba(#000, 0.12);
$white: #fff;

@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow:inset $top $left $blur $color;
    -moz-box-shadow:inset $top $left $blur $color;
    box-shadow:inset $top $left $blur $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}

::selection {
    background: $primaryColor;
}

::-moz-selection {
    background: $primaryColor; /* Firefox */
}

::-webkit-selection {
    background: $primaryColor; /* Safari */
}

.primary {
    color: $primaryColor;
}

.primaryText {
    color: $primaryText;
}

.light-primary {
    color: lighten($primaryColor, 17%);
}

.darkPrimaryColor {
    color: darken($primaryColor, 17%);
}

h1, h2, h3, h4, h5, h6, th {
    color: $primaryText !important;
}

p, td {
  color: $secondaryText !important;
}

.bootstrap-table .table {
  border-bottom-color: $dividerColor !important;
}

.want_square, .have_square {
  width: 40px;
  height: 40px;
  border-radius: 3px;
  display: block;
}

.want_square {
  background-color: lighten($accentColor, 20%);
  border: 1px solid darken($accentColor, 15%);
}

.have_square {
  background-color: darken($accentColor, 15%);
}

a {
    &:active, &:focus, &:hover, .btn.focus, .btn:focus, .btn:hover  {
      color: lighten($primaryColor, 35%);
      text-decoration: none;
    }
}

#topBar {
    background-color: $darkPrimaryColor !important;
    ul.dropdown-menu { /* submenu border top color */
    border-top-color: $primaryColor;
  }
}

#topBar ul.top-links {
  & > li > a {
    color: $darkPrimaryTextColor;
  }
  & > .dropdown.languages > a {
    border: solid $darkPrimaryTextColor 1px;
  }
}

#topNav {
  background-color: $primaryColor !important;
  li > a {
    color: $primaryTextColor !important;
    opacity: 0.6;
    &:hover {
      opacity: 1;
    }
  }
  li.active > a {
    opacity: 1;
  }
  button {
    @if $coloredEntryButton == 1 {
      background-color: darken($accentColor, 10%);
      color: $white !important;
      border-color: darken($accentColor, 24%) !important;
    }
    @else {
      border-color: $primaryTextColor !important;
      color: $primaryTextColor !important;
    }
  }
  .add_entry_button a:hover {
    background-color: rgba(0,0,0,0.03);
    opacity: 1;
  }
}

#share_content, #aboutModal {
  a, .btn-default {
    color: $accentColor !important;
    &:hover {
      color: $inverseAccentColor !important;
    }
  }

  .btn.focus, .btn:focus, .btn:hover {
    background-color: #fff !important;
    color: $accentColor !important;
    text-decoration: none;
  }

  .btn-colored {
    background-color: $accentColor !important;
    border-color: darken($accentColor, 24%);
    color: #fff !important;
    &:hover {
      background-color: #fff !important;
      color: $accentColor !important;
      border: 1px solid darken($accentColor, 24%);
      text-decoration: none;
    }
  }

  .btn-light-colored {
      background-color: lighten($accentColor, 12%);
      border-color: $accentColor;
      color: #fff !important;
  }

  .btn-dark-colored {
      background-color: darken($accentColor, 12%);
      border-color: darken($accentColor, 24%);
      color: #fff !important;
  }

  #entry_view {
    .close {
      color: $accentColor;
    }
  }



  .pagination>.active>a, 
  .pagination>.active>a:focus,
  .pagination>.active>a:hover,
  .pagination>.active>span,
  .pagination>.active>span:focus,
  .pagination>.active>span:hover {
    background-color: $accentColor;
    border-color: darken($accentColor, 15%);
    color: $white !important;
  }
}
